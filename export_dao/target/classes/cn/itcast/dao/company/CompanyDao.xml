<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
   namespace: 写需要映射的接口的全名
-->
<mapper namespace="cn.itcast.dao.company.CompanyDao">

    <!--定义resultMap-->
    <!--
       规则：
        property: 一看到这个属性肯定找类的元素
        column： 一看到这个属性肯定表的元素
    -->
    <resultMap id="BaseResultMap" type="cn.itcast.domain.company.Company">
        <!--
           property： 类的字段名称
           column： 表的字段名称
        -->
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="expiration_date" property="expirationDate"/>
        <result column="address" property="address"/>
        <result column="license_id" property="licenseId"/>
        <result column="representative" property="representative"/>
        <result column="phone" property="phone"/>
        <result column="company_size" property="companySize"/>
        <result column="industry" property="industry"/>
        <result column="remarks" property="remarks"/>
        <result column="state" property="state"/>
        <result column="balance" property="balance"/>
        <result column="city" property="city"/>
    </resultMap>


    <!--查询所有-->
    <!--
        id: Dao接口的方法名称
        resultMap: 用于表字段名称和类的属性名称不完全一致的情况
    -->
    <select id="findAll" resultMap="BaseResultMap">
        select * from ss_company
    </select>

    <insert id="add" parameterType="cn.itcast.domain.company.Company">
        insert into ss_company(
            id,
            name,
            expiration_date,
            address,
            license_id,
            representative,
            phone,
            company_size,
            industry,
            remarks,
            state,
            balance,
            city
        ) values(
                    #{id},
                    #{name},
                    #{expirationDate},
                    #{address},
                    #{licenseId},
                    #{representative},
                    #{phone},
                    #{companySize},
                    #{industry},
                    #{remarks},
                    #{state},
                    #{balance},
                    #{city}
                    )
    </insert>
    <update id="edit">
        update ss_company set
                              name = #{name},
                              expiration_date = #{expirationDate},
                              address = #{address},
                              license_id = #{licenseId},
                              representative = #{representative},
                              phone = #{phone},
                              company_size = #{companySize},
                              industry = #{industry},
                              remarks = #{remarks},
                              state = #{state},
                              balance = #{balance},
                              city = #{city}
        where id = #{id}
    </update>

    <select id="findById" parameterType="String" resultMap="BaseResultMap">
        select * from ss_company where ID = #{id}
    </select>
    <delete id="delete">
        delete from ss_company where id = #{id}
    </delete>
</mapper>




